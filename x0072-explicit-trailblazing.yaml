# Set the general options of our simulation
options:
  verbose: yes
  temperature: 300*kelvin
  pressure: 1*atmosphere # To run with NVT ensemble, set this option to "null". Defaults to 1 atm if excluded
  hydrogen_mass: 3.0 * amu
  constraints: HBonds
  anisotropic_dispersion_cutoff: auto
  minimize: yes
  default_number_of_iterations: 10000
  # Each iteration is about 1ps/replica.
  default_nsteps_per_iteration: 286
  default_timestep: 3.5*femtoseconds
  checkpoint_interval: 500
  platform: CUDA
  output_dir: x0072-explicit-trailblazing-output_1


# Configure the specific molecules we will use for our systems
# Note: We do not specify what the "receptor" and what the "ligand" is yet
molecules:
  # Define our receptor, we can call it whatever we want so we just use its name here as the directive
  mpro:
    filepath: input/x0072.pdbfixer.pdb
  # Define our ligand molecule
  x0072:
    filepath: input/x0072.mol2
    # Get the partial charges for the ligand by generating them from antechamber with the AM1-BCC charge method
    antechamber:
      charge_method: bcc

# Define the solvent for our system, here we use Particle Mesh Ewald for long range interactions
solvents:
  # We can title this solvent whatever we want. We just call it "pme" for easy remembering
  pme:
    nonbonded_method: PME # Main definition of the nonbonded method
    nonbonded_cutoff: 9*angstroms # Cutoff between short- and long-range interactions
    # Define how far away the periodic boundaries are from the receptor.
    # The volume will be filled with TIP3P water through LEaP
    clearance: 11*angstroms
    # If ions are needed to neutralize the system, add these specific ions
    positive_ion: Na+
    negative_ion: Cl-

# Define the systems: What is the ligand, receptor, and solvent we put them in
systems:
  # We can call our system anything we want, this example just uses a short name for the receptor hyphenated with the ligand
  mpro-x0072:
    # These names all use the names we defined previously
    receptor: mpro
    ligand: x0072
    solvent: pme
    leap:
      parameters: [leaprc.protein.ff14SB, leaprc.gaff2, leaprc.water.tip4pew]

# The protocols define the alchemical path each phase will take, we use the same lambda values, though they could be different
protocols:
  forward-20-bidirectional:
    complex:
      trailblazer_options:
        reversed_direction: no
        thermodynamic_distance: 1.5
      alchemical_path: auto
    solvent:
      trailblazer_options:
        reversed_direction: no
        thermodynamic_distance: 1.5
      alchemical_path: auto

# Here we combine the system and the protocol to make an experiment
experiments:
  system: mpro-x0072
  protocol: forward-20-bidirectional
  restraint:
    type: Harmonic # Keep the ligand near the protein
    restrained_ligand_atoms: (resname LIG) and (mass > 1.5)
    restrained_receptor_atoms: (resi 41 or resi 49 or resi 145 or resi 163 or resi 164 or resi 165 or resi 189) and (mass > 1.5)
    spring_constant: 0.5 * kilocalories_per_mole/(angstrom**2)

    # We set a harmonic restraint which biases the ligand to remain close to the receptor when it is decoupled
    # to prevent it from drifting into the whole box and possibly never visiting the binidng site again.
    # The Harmonic restraint is fairly weak since it restrains a single ligand atom to the centroid-most receptor atom,
    # which may or may not be a binding site.
    # The restraint is opposite the coupling parameter since we want the ligand unrestrained in the binding site
    # We correct for the free energy of this restraint through the `standard_state_correction` calculated automatically.
